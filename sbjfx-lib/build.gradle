apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.openjfx.javafxplugin'
apply plugin: 'org.jetbrains.dokka'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    implementation "org.springframework.boot:spring-boot:$springBootVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.21'

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'
    testImplementation 'org.junit.platform:junit-platform-runner:1.8.2'
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
    testImplementation 'org.testfx:openjfx-monocle:jdk-12.0.1+2'
}

group = 'net.lustenauer'
version = '0.0.1-SNAPSHOT'
description = 'sbjfx-lib'
java.sourceCompatibility = JavaVersion.VERSION_11

java {
    withSourcesJar()
    withJavadocJar()
}

javafx {
    version = "$javafxVersion"
    modules = ['javafx.controls', 'javafx.fxml']
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform {
        jvmArgs += "-Dheadless=true"
    }
}

repositories {
    mavenCentral()
}
