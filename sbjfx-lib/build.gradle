plugins {
    //    id 'maven-publish'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: "kotlin-kapt"


dependencies {
    implementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    implementation "org.springframework.boot:spring-boot:$springBootVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.21'
//    implementation "org.springframework:spring-context:5.3.16"
//    implementation 'org.slf4j:slf4j-api:1.7.30'

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'
    testImplementation 'org.junit.platform:junit-platform-runner:1.8.2'
    testImplementation "org.testfx:openjfx-monocle:8u76-b04"
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit5:4.0.16-alpha'
//    testImplementation 'org.springframework:spring-test:5.3.16'
}

group = 'de.roskenet'
version = '2.6.0-SNAPSHOT'
description = 'springboot-javafx-support'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withSourcesJar()
    withJavadocJar()
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}
